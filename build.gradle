/*
 * Copyright (c) 2016, nwillc@gmail.com
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

buildscript {
    repositories {
        mavenLocal()
        jcenter {
            url 'http://jcenter.bintray.com'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            url 'http://maven.tmatesoft.com/content/repositories/releases/'
        }
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4',
                'org.tmatesoft.sqljet:sqljet:1.1.9',
                'au.com.ish.gradle:release:2.2.2',
                'gradle.plugin.com.github.nwillc:vplugin:1.2.4',
                'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.9'
    }
}

apply plugin: 'release'
apply plugin: 'java'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'com.github.nwillc.vplugin'
apply plugin: 'info.solidsoft.pitest'

repositories {
    mavenLocal()
    jcenter {
        url 'http://jcenter.bintray.com'
    }
}

dependencies {
    compile 'com.github.nwillc:almost-functional:1.9.7'
    testCompile 'junit:junit:4.12',
            'org.assertj:assertj-core:3.5.2',
            'com.h2database:h2:1.4.192',
            'com.github.nwillc:jdk_contract_tests:1.7.6',
            'org.mockito:mockito-core:2.0.111-beta',
            'org.apache.commons:commons-dbcp2:2.1.1'
}

group = 'com.github.nwillc'
archivesBaseName = 'fun-jdbc'
version = '0.8.4'
targetCompatibility = '1.8'
sourceCompatibility = '1.8'

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

test {
    beforeTest { descriptor ->
        logger.lifecycle("\tRunning " + descriptor.className + "." + descriptor.name)
    }

    afterSuite { descriptor, result ->
        if (descriptor.parent == null) {
            logger.lifecycle("\tTests run: " + result.testCount
                    + ", Failures: " + result.failedTestCount
                    + ", Skipped: " + result.skippedTestCount)
        }
    }

    testLogging {
        showStandardStreams true
        exceptionFormat "full"
    }
}

release {
    failOnSnapshotDependencies = true
    allowLocalModifications = true
    releaseDryRun = false
    scm = 'git'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')

    dryRun = false
    publish = true
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = project.name
        desc = 'Java 8 functional JDBC utility code, applying some of Java\'s newer features to reduce JDBC boilerplate code.'
        websiteUrl = 'https://github.com/nwillc/fun-jdbc'
        issueTrackerUrl = 'https://github.com/nwillc/fun-jdbc/issues'
        vcsUrl = 'https://github.com/nwillc/fun-jdbc.git'
        licenses = ['ISC']
        labels = ['jdk8', 'jdbc']
        publicDownloadNumbers = true
    }
}

bintrayUpload.onlyIf { !project.version.toString().endsWith('SNAPSHOT') }

pitest {
    threads = 4
    outputFormats = ['XML', 'HTML']
}